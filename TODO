Catch interrupt sig
Basic Drawing Primitives
Batch drawing
Joystick stuffs
Keyboard and Mouse Stuffs
Fonts?
Sound?
Networking?

May continue work on shader class
	Change LoadFromFiles to accept multiple files, or possibly wildcharacters and load/compile/attatch all
	Remove the gl.CreateProgram from the LoadFromFiles?
	Add a function that creates/loads all shaders/compiles and links all in one function?
		Possibly this is the LoadFromFiles, and a similar LoadFromFile only does one?
	Determine tpe of shader based on file extension?
Move the Uniform stuff into the shader class
Textures
Uniform Buffer Ojbects
Batches
Batch Manager?
Conveinence draw functions under argon namespace

Keep track of bound stuffs in argon itself, to prevent redundant binding?

May recreate the renderer.Create method to take a renderable interface type instead of the attributes
Possibly move circle and other primitives, they are auxilary things for the main engine

May make it so that most functions just return errors instead of printing themselves?
	Maybe only acceptable failures
	Switch to panics for unacceptable failures

Classes should not know about files/networking/etc... they see streams, and possibly a resource manager class may open files and such and pass the stream to the object being created/loading/whatever

GLaM or azul3d for 3d math lib?

Error checking on all gl functions needs to be evaluated
